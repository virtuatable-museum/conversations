include:
  - template: 'Workflows/MergeRequest-Pipelines.gitlab-ci.yml'

stages:
  - checks
  - image creation


default:
  before_script:
    # Installs the Bundler dependencies to later get gems
    - gem install bundler --no-document
    # Sets the path used for caching purposes, and install dependencies
    - bundle config set path vendor/ruby
    # Install all dependencies and cache them
    - bundle install

.versions:
  script:
    # Stores the next version in a corresponding file
    - bundle exec ruby ./scripts/version.rb next > ./NEXT_VERSION
    # Stores the current version for Kubernetes purpose
    - bundle exec ruby ./scripts/version.rb current > ./VERSION


# Executes the RSpec tests.
# TODO : store the results in an artefact.
rspec:
  stage: checks
  script:
    - bundle exec rspec --format RspecJunitFormatter --out rspec.xml
  artifacts:
    reports:
      junit: rspec.xml

# Checks the aesthetic of the code against Rubocop standards.
# TODO : store the results in an artefact
rubocop:
  stage: checks
  script:
    - bundle exec rubocop --fail-fast --format html --out rubocop.html
  artifacts:
    paths:
      - rubocop.html

documentation:
  stage: checks
  rules:
     - allow_failure: true
  script:
    - bundle exec yard doc controllers/ decorators/ services/

docker:
  extends: .versions
  stage: image creation
  script:
    # Logs in into docker, don't forget to create the environment variables on Gitlab
    - echo $DOCKER_PWD | docker login --username $DOCKER_USER --password-stdin
    # Stores the next version in an environment variable to access it easily
    - export NEXT_VERSION=`cat ./NEXT_VERSION`
    # Show me who executes the docker command please
    - whoami
    # Builds the image for the service.
    - docker build -t virtuatable/conversations:${NEXT_VERSION} .
    # Pushes the image to Docker HUB
    - docker push virtuatable/conversations:${NEXT_VERSION}
  only:
    refs:
      - master